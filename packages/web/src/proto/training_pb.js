// @generated by protoc-gen-es v1.6.0 with parameter "target=js"
// @generated from file training.proto (package training, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum training.Status
 */
export const Status = proto3.makeEnum("training.Status", [
  { no: 0, name: "CREATED" },
  { no: 1, name: "IN_PROGRESS" },
  { no: 2, name: "ERRORED" },
  { no: 3, name: "COMPLETED" },
  { no: 4, name: "DELETED" },
]);

/**
 * Please note that the AI developers need to provide a server implementation of the gprc server of this proto.
 *
 * @generated from message training.ModelDetails
 */
export const ModelDetails = proto3.makeMessageType(
  "training.ModelDetails",
  () => [
    { no: 1, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: "grpc_method_name",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 3,
      name: "grpc_service_name",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 4,
      name: "description",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 6, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 7,
      name: "updated_date",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 8,
      name: "address_list",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      repeated: true,
    },
    {
      no: 9,
      name: "training_data_link",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 10,
      name: "model_name",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 11,
      name: "organization_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 12,
      name: "service_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 13, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 14,
      name: "is_publicly_accessible",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
  ]
);

/**
 * @generated from message training.AuthorizationDetails
 */
export const AuthorizationDetails = proto3.makeMessageType(
  "training.AuthorizationDetails",
  () => [
    {
      no: 1,
      name: "current_block",
      kind: "scalar",
      T: 4 /* ScalarType.UINT64 */,
    },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "signature", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    {
      no: 4,
      name: "signer_address",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
  ]
);

/**
 * @generated from message training.CreateModelRequest
 */
export const CreateModelRequest = proto3.makeMessageType(
  "training.CreateModelRequest",
  () => [
    { no: 1, name: "authorization", kind: "message", T: AuthorizationDetails },
    { no: 2, name: "model_details", kind: "message", T: ModelDetails },
  ]
);

/**
 * the signer address will get to know all the models associated with this address.
 *
 * @generated from message training.AccessibleModelsRequest
 */
export const AccessibleModelsRequest = proto3.makeMessageType(
  "training.AccessibleModelsRequest",
  () => [
    {
      no: 1,
      name: "grpc_method_name",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 2,
      name: "grpc_service_name",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 3, name: "authorization", kind: "message", T: AuthorizationDetails },
  ]
);

/**
 * @generated from message training.AccessibleModelsResponse
 */
export const AccessibleModelsResponse = proto3.makeMessageType(
  "training.AccessibleModelsResponse",
  () => [
    {
      no: 1,
      name: "list_of_models",
      kind: "message",
      T: ModelDetails,
      repeated: true,
    },
  ]
);

/**
 * @generated from message training.ModelDetailsRequest
 */
export const ModelDetailsRequest = proto3.makeMessageType(
  "training.ModelDetailsRequest",
  () => [
    { no: 1, name: "model_details", kind: "message", T: ModelDetails },
    { no: 2, name: "authorization", kind: "message", T: AuthorizationDetails },
  ]
);

/**
 * helps determine which service end point to call for model training
 * format is of type "packageName/serviceName/MethodName", Example :"/example_service.Calculator/estimate_add"
 * Daemon will invoke the model training  end point , when the below method option is specified
 *
 * @generated from message training.TrainingMethodOption
 */
export const TrainingMethodOption = proto3.makeMessageType(
  "training.TrainingMethodOption",
  () => [
    {
      no: 1,
      name: "trainingMethodIndicator",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
  ]
);

/**
 * @generated from message training.UpdateModelRequest
 */
export const UpdateModelRequest = proto3.makeMessageType(
  "training.UpdateModelRequest",
  () => [
    { no: 1, name: "update_model_details", kind: "message", T: ModelDetails },
    { no: 2, name: "authorization", kind: "message", T: AuthorizationDetails },
  ]
);

/**
 * @generated from message training.ModelDetailsResponse
 */
export const ModelDetailsResponse = proto3.makeMessageType(
  "training.ModelDetailsResponse",
  () => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(Status) },
    { no: 2, name: "model_details", kind: "message", T: ModelDetails },
  ]
);
